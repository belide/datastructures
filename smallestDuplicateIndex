
// Note: Write a solution with O(n) time complexity and O(1) additional space complexity, since this is what you would be asked to do during a real interview.
// Given an array a that contains only numbers in the range from 1 to a.length, find the first duplicate number for which the 
// second occurrence has the minimal index. In other words, if there are more than 1 duplicated numbers, return the number 
// for which the second occurrence has a smaller index than the second occurrence of the other number does. 
// If there are no such elements, return -1.


function firstDuplicate(a) {
  const arr = a.map(num => num);  
  const arrRep = arr.sort((a,b) => a-b).filter((elm, index, array) => elm === array[index + 1]);
  if (arrRep.length === 0){
    return -1;
  } else{
   return a[arrRep.map((elm) => a.indexOf((elm), a.indexOf(elm) + 1)).sort((a,b) => a -b)[0]];  
  }
}

